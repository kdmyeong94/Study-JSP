
 1. 상태 유지의 필요성

	- application, session, cookie

 2. application

	- 하나의 apllication이 생성되고 소멸 될 때 까지 계속 유지.
	- eclipese에서 하나의 project가 하나의 application이라고 생각하면 되고, 하나의 server에는 여러개의 web apllication이 존재 할 수 있다.

 3. session

 	- 하나의 웹 브라우저의 정보를 유지하기 위한 세션 정보를 저장
	- 브라우저 종료시 종료
	- 클라이언트 로그인 정보

  3-1. session
	- 내장 객체로서 브라우저마다 한 개씩 존재하고, 고유한 sessionID 생성 후 정보 추출

  3-2. session 사용
	- session 값 설정
		session.setAttribute ( " 설정한 세션 아이디 " , 세션에 넣을 값 ) ; 

	- session 시간 설정
		session.setMaxInactiveInterval ( 60 * 60 ) ;  	// 60분동안 세션유지
		session.setMaxInactiveInterval ( -1 ) ; 		// 세션을 무한대로 유지

	- session 값 가져오기
	 	session.getAttribute ( " 설정한 세션 아이디 " ) ;
	
	- session 값 삭제
		session.removeAttribute ( " 설정한 세션 아이디 " ) ;
		session.invalidate() ; 		// 세션 전체 제거, 무효화

 
 4. 쿠키 ( Cookie )

	- 쿠키 ( Cookie ) 
		-> 저장위치 : 클라이언트 ( = 접속자 PC )
		-> 저장형식 : text
		-> 만료시점 : 쿠키 저장시 설정 ( 브라우저가 종료되도, 만료 시점이 지나지 않으면 자동 삭제가 되지 않음)
		-> 용량제한 : 하나의 도메인당 20개
		-> 속도	   : 세션보다 빠름
		-> 보안	   : 세션보다는 빠름			

	- 세션 ( session )
		-> 저장위치 : 해당 브라우저
		-> 저장형식 : Object
		-> 만료시점 : 브라우저 종료 시 삭제 ( 기간 지정 가능 )
		-> 속도	   : 쿠키보다 느림
		-> 보안	   : 쿠키보다 좋다


 5. 정리
	- application
		-> 사용범위 : 전역 범위에서 사용하는 저장공간
		-> 생명주기 : WAS가 시작해서 종료 할 때 까지

	- session
		-> 사용범위 : 세션 범위에서 사용하는 저장공간
		-> 생명주기 : 세션이 시작해서 종료 할 때 까지

	- cookie
		-> 사용범위 : web브라우저 별 지정한 path 범주 공간
		-> 생명주기 : 브라우저에서 전달한 시간부터 만료 시간 까지


 6. JSP
	- JSP는 JavaServer Pages
	- HTML 코드에 JAVA 코드를 넣어 동적 웹페이지를 생성하는 웹어플리케이션 도구이다.
	- JSP가 실행되면 자바 서블릿으로 변환되며, 웹 어플리케이션 서버에서 동작되면서 필요한 기능을 수행하고 그렇게 생성된 데이터를 웹페이지와 함께 클라이언트로 응답한다.
	- JSP는 서블릿 기반의 '서버 스크립트 기술'이다.
	- JSP : HTML + JAVA (HTML을 중심으로 JAVA와 연동하여 사용하는 웹 언어)


 7. 스크립트 태그
	- HTML 코드에 자바 코드를 넣어 프로그램이 수행 할 기능을 구현 할 수 있다.

  7-1. 선언문 ( declaration ) : <%!  %>
	- 자바 변수나 메소드를 정의하는데 사용하는 태그

  7-2. 스크립틀릿 ( scriptlet ) : <% %>
	- 자바 변수 선언 및 자바 로직 코드를 작성하는데 사용되는 태그

  7-3. 표현문 ( expression ) : <%= %>
	- 변수, 계산식, 메소드 호출 결과를 나타내는 태그	

  7-4. 지시자 : <%@ %>
	- 페이지 속성 지정
 
  7-5. 주석 : <%-- --%> 	
	- 주석 처리


