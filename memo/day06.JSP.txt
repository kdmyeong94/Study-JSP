
 1. DTO ( Data Transfer Object ) / VO ( Value Object )
	- 양쪽으로 전송되어 오고가는 데이터들을 담은 객체, jsp에서는 Bean이라고 부른다. 여러 데이터들을 포장해서 만든 데이터 포장 객체
	- 사용자가 입력한 값을 객체 형태로 받을 수 있게 클래스 구성
	- 폼에서 입력된 데이터들은 하나의 DTO 객체로 변환 가능
	- 하나의 데이터베이스 레코드를 저장하여 레코드와 같은 구조를 가짐
	- 레코드가 50개면 DTO 객체도 50개
	- 데이터가 포함된 객체를 한 시스템에서 다른 시스템으로 전달하는 작업을 처리하는 객체

 2. DAO ( Data Access Object ) 
	- 데이터에 접근, 데이터를 관리하기 위한 객체
	- 데이터들을 관리 ( 추가, 수정, 삭제, 읽기) 하는 여러 메소드들이 정의되어 있다.
	- insert, delete, update, select 등 레코드 처리를 주 목적으로 한다.
	- DTO / VO 객체를 데이터베이스 서버에 저장
	- 데이터베이스 서버로부터 레코드를 select 한 후, DTO객체를 변경해 가져옴
	- SQL을 직접 실행하는 기능을 가짐	
	- 데이터 접근을 목적으로 하는 객체
	- DB를 사용해 데이터를 조회하거나 조작하는 기능을 전담하도록 만든 오브젝트


 3. DB connection

 관리자계정실행 
 ( 실행 > RUN SQL Command Line //// or //// cmd 창 > sqlplus 엔터 ( Enter user-name: 나오면 정상) > user-name = system / passward = 1234 

  3-1. 계정생성 
	( 아이디,비밀번호 jsp 인 계정 생성)
	create user jsp identified by jsp;
	(권한 주기)
	grant connect, resource to jsp;
	
 	dbeaver에서 확인
	새 데이터베이스 연결 > Oracle >Database ( xe로 수정) > username jsp , password jsp 입력, > edit driver settings > Libraries > add file> ojdbc6.jar 추가 > Test connection> 완료

 4. ojdbc 란
  4-1. jdbc
	- Java DataBase Connectivity
	- 자바에서 데이터베이스에 접속/ 관리 할 수 있게 해주는 드라이버 ( API )
	- 자바로 작성된 프로그램으로 DB와 관련된 작업을 처리 할 수 있도록 제공되는 기능 ( 코드 ) 들을 모아 놓은 것

  4-2 ojdbc
	- Oracle에서 제공하는 오라클 DB를 관리 할 수 있도록 도와주는 JDBC이다.

  4-3. java sql package
	- connection
		-> DriverManager로부터 Connection 객체를 가져온다.
	- PreparedStatement
		-> SQL문을 미리 컴파일 하여 실행 속도를 높여준다.
	- ExecuteUpdate
		-> select 구문을 제외한 다른 구문을 수행 할 때 사용되는 함수
		-> 수행 결과로 int 타입의 값을 반환한다.
		-> insert/delete/update 관련 구문에서는 반영된 레코드의 건 수를 반환한다.
 
  4-4. resultset  // select 구문을 실행하기 위해 사용하는 함수
	- select 쿼리 실행 시 executeQuery () 메서드를 사용하며, 실행 결과로 java.sql.ResultSet 형으로 리턴해준다.
	- 자주 사용하는 메서드
		-> next()	:다음 행으로 커서를 이동, 다음 행이 없으면 false를 리턴
		-> getXXX ( int columnIndex ) : columnIndex 번째 컬럼의 값을 XXX타입으로 가져온다.
		-> getXXX ( String columnName ) : columnName 컬럼의 값을 XXX타입으로 가져온다.





