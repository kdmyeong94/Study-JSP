
 1. Ajax ( Asynchronous Javascript And XML ) - 비동기적 통신
	- 빠르게 동작하는 웹페이지를 만들기 위한 개발 기법이다.
	- Ajax는 웹 페이지 전체를 다시 로딩하지 않고도 웹 페이지의 일부분만을 갱신 할 수 있고 백 그라운드 영역에서 서버와 통신하여 그 결과를 웹 페이지의 일부분에만 표시 할 수 있다.
	- 서버와 데이터를 주고 받을 수 있는데 대표적인 데이터는 JSON, XML, HTML, 텍스트 파일 등이 있다. ( 보통 JSON 사용 )

  1-1. 비동기 방식이란?
	- 비동기 방식은 웹 페이지를 리로드 하지 않고 데이터를 불러오는 방식.
	- ajax를 통해서 서버에 요청을 한 후 멈추어 있는 것이 아니라 그 프로그램은 계속 돌아간다는 의미를 내포한다.

  1-2. 동기 vs 비동기방식
	필기?ㅡㅡ 퍼온 그림으로 대체

  1-3. ajax 장, 단점
	- 장점
		-> 웹 페이지 전체를 다시 로딩하지 않고도 웹 페이지 일부분만 갱신 할 수 있다.
		-> 웹 페이지가 로드된 후에 서버로 데이터 요청을 보내거나 받을 수 있다.
		-> 다양한 UI구현이 가능해진다.
	- 단점
		-> 페이지 이동이 없기 때문에 히스토리 관리가 안된다.
		-> 반복적인 데이터 요청이 있으면 느려지거나 작동하지 않게 된다.

  1-4. 서버에 요청하기 - request
	- XMLHttpRequest 객체
		-> ajax의 가장 핵심적인 구성요소
		-> 웹 브라우저가 서버와 데이터를 교환 할 때 사용
		-> 웹 브라우저가 백그라운드에서 서버와 계속해서 통신 할 수 있는 것은 이 객체를 사용하기 때문이다.

		let xhr = new XMLHttpRequest();

	- open() 메서드
		-> 서버로 보낼 ajax 요청의 형식을 설정한다.
		
		open ( 전달방식, url 주소, 동기여부 );
	
		전달방식 	: GET, POST방식 중 하나 선택
		URL 주소 : 요청을 처리할 서버의 파일 주소 전달
		동기여부	: 요청을 동기식으로 전달 할 지 비동기식으로 전달 할 지 선택
			( 비동기 : true , 동기 : false )

	- send ()
		->작성된 

 1-5. 서버로부터 응답 ( response )
	- readyState
		-> XMLHttpRequest 객체의 현재 상태를 나타낸다.
		1. UNSENT ( 숫자 0 ) : XMLHttpRequest 객체가 생성됨
		2. OPENED ( 숫자 1 ) : open() 메서드가 성공적으로 실행됨
		3. HEADERS_RECEIVE ( 숫자 2 ) : 모든 요청에 대한 응답이 도착
		4. LOADING ( 숫자 3 ) 	: 요청한 데이터를 처리 중
		5. DONE ( 숫자 4 ) : 요청한 데이터의 처리가 완료되어 응답 할 준비가 완료됨
	- status
		-> 서버의 문서상태를 나타낸다.
		1. 1xx ( 100번대 )	: 조건부 응답
		2. 2xx 		: 성공
		3. 3xx		: 리다이렉션 완료
		4. 4xx		: 요청 오류
		5. 5xx 		: 서버 오류

	- onreadystatechange
		-> XMLHttpRequest 객체의 readyState 프로퍼티 값이 변할 때마다 자동으로 호출되는 함수를 설정한다.

 
 2. JSON
  2-1. JSON 이란
	- 경량화된 데이터 교환 방식. 서로 다른 언어들 간 데이터를 주고 받을 수 있도록 만들어진 텍스트 기반의 형식
	- 프로그래밍 언어가 아닌 데이터 표기 방법 중 하나이고 기본적으로 name : value 형태의 구조를 가지고 있다.

